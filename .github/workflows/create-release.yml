name: create-release
on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]
          # echo "latest_release=$(echo '${{ toJSON(steps.get_latest_release.outputs.data) }}' | jq .tag_name" >> $GITHUB_ENV
          # release=$(echo ${{ steps.get_latest_release.outputs.data }} | jq .tag_name)

jobs:
  create-releases:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get latest release
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases/latest
          owner: nakahashi
          repo: electron-boilerplate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set latest release
        run: |
          echo "latest_release_tag=${{ fromJson(steps.get_latest_release.outputs.data).tag_name }}" >> "$GITHUB_ENV"
      - run: |
          echo "${{ env.latest_release_tag }}"

      - name: Set latest tag
        run: |
          git fetch --prune --unshallow
          echo "latest_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_ENV"
      - run: |
          echo "${{ env.latest_tag }}"

      - name: Set release name
        env:
          TZ: 'Asia/Tokyo'
        run: |
          echo "release_name=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Generate release notes
        uses: octokit/request-action@v2.x
        id: get_release_notes
        with:
          route: POST /repos/{owner}/{repo}/releases/generate-notes
          owner: nakahashi
          repo: electron-boilerplate
          tag_name: ${{ env.latest_tag }}
          target_commitish: 'main'
          previous_tag_name: ${{ env.latest_release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "${{ steps.get_release_notes.outputs.data }}"

      # - name: Create release
      #   if: env.latest_release_tag != env.latest_tag
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.latest_tag }}
      #     release_name: "${{'v'}}${{ env.release_name }}"
      #     body: |
